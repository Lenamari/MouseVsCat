function randomX(){return Math.abs(Math.floor(Math.random()*canvas1.width-50))}function randomY(){return Math.abs(Math.floor(Math.random()*canvas1.height-50))}function random(t){return Math.abs(Math.random()*t)+3}function random(t){return Math.abs(Math.random()*t)}var body=document.querySelector("body"),container=document.querySelector(".container"),scoreDiv=container.querySelector(".score > span"),score=0,canvas=function(t,s){this.width=t,this.height=s,this.div,this.create=function(){this.div=document.createElement("div"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.classList.add("canvas"),container.appendChild(this.div)}},canvas1=new canvas(1200,500);canvas1.create();for(var blackOut=function(){this.div,this.create=function(){this.div=document.createElement("div"),this.div.classList.add("black-out"),body.appendChild(this.div)},this.remove=function(){this.div.remove()}},obstacles=[],obstaclesTotal=10,obstacle=function(t,s,e,i){this.div,this.width=t,this.height=s,this.posX=e,this.posY=i,this.create=function(){obstacles.push(this),this.div=document.createElement("div"),this.div.classList.add("obstacle"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)}},i=0;i<obstaclesTotal;i++){var obstacle1=new obstacle(50,50,randomX(),randomY());obstacles.push(obstacle1),obstacle1.create()}for(var cheeses=[],cheesesTotal=5,cheese=function(t,s,e,i){this.width=t,this.height=s,this.dirX,this.posX=e,this.posY=i,this.div,this.create=function(){this.div=document.createElement("div"),this.div.classList.add("cheese"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)},this.update=function(){this.posX=randomX(),this.posY=randomY(),this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px"}},i=0;i<cheesesTotal;i++){var cheese1=new cheese(50,50,randomX(),randomY());cheeses.push(cheese1),cheese1.create()}for(var rottenCheeses=[],rottenTotal=3,rottenCheese=function(t,s,e,i){this.width=t,this.height=s,this.dirX,this.posX=e,this.posY=i,this.div,this.create=function(){this.div=document.createElement("div"),this.div.classList.add("rotten-cheese"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)},this.update=function(){this.posX=randomX(),this.posY=randomY(),this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px"}},i=0;i<rottenTotal;i++){var rottenCheese1=new rottenCheese(50,50,randomX(),randomY());rottenCheeses.push(rottenCheese1),rottenCheese1.create()}for(var wines=[],winesTotal=7,wine=function(t,s,e,i){this.width=t,this.height=s,this.dirX,this.posX=e,this.posY=i,this.div,this.create=function(){this.div=document.createElement("div"),this.div.classList.add("wine"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)}},i=0;i<winesTotal;i++){var wine1=new wine(50,50,randomX(),randomY());wines.push(wine1),wine1.create()}scoreTimeout=!0,leftMov=!0,upMov=!0,rightMov=!0,downMov=!0;var mouse=function(t,s,e,i,h,o,d){this.width=t,this.height=s,this.posX=e,this.posY=i,this.speed=h,this.dirX=0,this.dirY=0,this.div,this.create=function(){this.div=document.createElement("div"),this.div.classList.add("mouse","dir90"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)},this.move=function(){var t,s,e,i,h,o=this;document.addEventListener("keyup",function(d){t=!1,s=!1,e=!1,i=!1,h=!1,o.dirX=0,o.dirY=0,clearInterval(loop)},!1),document.addEventListener("keydown",function(d){switch(d.keyCode){case 37:t=!0,o.dirX=-o.speed,o.div.className="mouse dir270";break;case 38:s=!0,o.dirY=-o.speed,o.div.className="mouse dir0";break;case 39:e=!0,o.dirX=o.speed,o.div.className="mouse dir90";break;case 40:i=!0,o.dirY=o.speed,o.div.className="mouse dir180"}0==h&&(h=!0,loop=setInterval(function(){o.posX<=0?o.posX=1:o.posX>=canvas1.width-o.width?o.posX=canvas1.width-o.width-1:o.posX+=o.dirX,o.posY<=0?o.posY=1:o.posY>=canvas1.height-o.height?o.posY=canvas1.height-o.height-1:o.posY+=o.dirY;for(var h=0;h<=obstacles.length-1;h++)o.posX>=obstacles[h].posX-obstacles[h].width/1.5&&o.posX<=obstacles[h].posX+obstacles[h].width/1.5&&o.posY>=obstacles[h].posY-obstacles[h].height/1.5&&o.posY<=obstacles[h].posY+obstacles[h].height/1.5&&(t?(console.log("left"),o.posX=obstacles[h].posX+o.width):s?(console.log("up"),o.posY=obstacles[h].posY+o.height):e?(console.log("right"),o.posX=obstacles[h].posX-o.width):i&&(console.log("down"),o.posY=obstacles[h].posY-o.height));for(var h=0;h<=cheeses.length-1;h++)o.posY-o.height/2<cheeses[h].posY&&o.posY+o.height/2>cheeses[h].posY&&o.posX-o.width/2<cheeses[h].posX&&o.posX+o.width/2>cheeses[h].posX&&(cheeses[h].update(),score+=1,scoreDiv.innerHTML=score);for(var h=0;h<=rottenCheeses.length-1;h++)if(o.posY-o.height<rottenCheeses[h].posY&&o.posY+o.height>rottenCheeses[h].posY&&o.posX-o.width<rottenCheeses[h].posX&&o.posX+o.width>rottenCheeses[h].posX){rottenCheeses[h].update(),score<=0?score=0:score-=1,scoreDiv.innerHTML=score;var d=new blackOut;d.create(),setTimeout(function(){d.remove()},1e3)}o.div.style.left=o.posX+"px",o.div.style.top=o.posY+"px"},10))},!1)}},mouse1=new mouse(50,50,20,200,6,0,0);mouse1.create(),mouse1.move();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
