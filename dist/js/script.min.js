function randomX(){return Math.abs(Math.floor(Math.random()*canvas1.width-50))}function randomY(){return Math.abs(Math.floor(Math.random()*canvas1.height-50))}function random(s){return Math.abs(Math.random()*s)+3}function random(s){return Math.abs(Math.random()*s)}var container=document.querySelector(".container"),scoreDiv=container.querySelector(".score > span"),score=0,canvas=function(s,t){this.width=s,this.height=t,this.create=function(){this.div=document.createElement("div"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.classList.add("canvas"),container.appendChild(this.div)}},canvas1=new canvas(1200,500);canvas1.create();var obstacles=[],obstacle=function(s,t,e,i){this.div,this.width=s,this.height=s,this.posX=randomX(),this.posY=randomY(),this.create=function(){obstacles.push(this),this.div=document.createElement("div"),this.div.classList.add("obstacle"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)}},obstacle1=new obstacle(50,50,100,100);obstacle1.create();var mouse=function(s,t,e,i,h,o,d){this.width=s,this.height=t,this.posX=e,this.posY=i,this.speed=h,this.dirX=0,this.dirY=0,this.div,this.create=function(){this.div=document.createElement("div"),this.div.classList.add("mouse","dir90"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)},this.move=function(){var s,t,e,i,h=this,o=!1;document.addEventListener("keydown",function(d){switch(d.keyCode){case 37:s=!0,h.dirX=-h.speed,h.div.className="mouse dir270";break;case 38:t=!0,h.dirY=-h.speed,h.div.className="mouse dir0";break;case 39:e=!0,h.dirX=h.speed,h.div.className="mouse dir90";break;case 40:i=!0,h.dirY=h.speed,h.div.className="mouse dir180"}0==o&&(o=!0,loop=setInterval(function(){h.posX<=0?h.posX=1:h.posX>=canvas1.width-h.width?h.posX=canvas1.width-h.width-1:h.posX+=h.dirX,h.posY<=0?h.posY=1:h.posY>=canvas1.height-h.height?h.posY=canvas1.height-h.height-1:h.posY+=h.dirY;for(var s=0;s<cheeses.length-1;s++)h.posY-h.height/2<cheeses[s].posY&&h.posY+h.height/2>cheeses[s].posY&&h.posX-h.width/2<cheeses[s].posX&&h.posX+h.width/2>cheeses[s].posX&&(score+=1,scoreDiv.innerHTML=score);h.div.style.left=h.posX+"px",h.div.style.top=h.posY+"px"},10))}),document.addEventListener("keyup",function(s){o=!1,h.dirX=0,h.dirY=0,clearInterval(loop)},!1)}},mouse1=new mouse(50,50,20,200,4,0,0);mouse1.create(),mouse1.move();for(var cheeses=[],cheese=function(s,t,e,i){this.width=s,this.height=t,this.dirX,this.posX=e,this.posY=i,this.div,this.create=function(){cheeses.push(this),this.div=document.createElement("div"),this.div.classList.add("cheese"),this.div.style.width=this.width+"px",this.div.style.height=this.height+"px",this.div.style.top=this.posY+"px",this.div.style.left=this.posX+"px",container.querySelector(".canvas").appendChild(this.div)},this.direction=function(){var s=this;setInterval(function(){s.posX<=-100?(s.posX=canvas1.width-s.width,s.posY=randomY()):(s.posX-=s.speed,s.div.style.left=s.posX+"px",s.div.style.top=s.posY+"px"),mouse1.posY-mouse1.height/2<s.posY&&mouse1.posY+mouse1.height/2>s.posY&&mouse1.posX-mouse1.width/2<s.posX&&mouse1.posX+mouse1.width/2>s.posX&&(s.posX=canvas1.width-s.width,s.posY=randomY(),score+=1,console.log("score: "+score))},30)}},i=0;i<=10;i++){var cheese1=new cheese(50,50,randomX(),randomY());cheese1.create()}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
